Формат видеоархива "Camino".

Камеры вручную разводятся по физическим жестким дискам.
Это делается через задание потоков записи с привязкой потоков записи к директориям
и задание корневой директории архива для каждой записи.

Архив разделён на каналы. У каждого канала есть "имя" - уникальный идентификатор,
который задаётся через конфиг. Один канал - одна камера. С каждым каналом
связана отдельная поддиректория для записи - "архив канала".

Архив канала состоит из отрезков видео фиксированной длины. Отрезок видео представляется
в виде пары файлов: видеоданные и индекс. Индекс нужен для быстрой перемотки (seek и
trick play). Отрезок видео записывается в формате flv, либо в более развитом внутреннем
формате. - Это проблема, выбери один основной вариант, и развивай только его.

Преимущество flv одно - эти файлы можно сходу воспроизводить в достаточно большом
количестве плееров. Недостаток flv - нет DTS. Но для входящих RTP-потоков DTS изначально
недоступен. Можно построить тонкую оболочку-интерфейс для записи файлов видеоданных.
Поэтому текущее базовое решение - формат flv, отделённый тонким интерфейсом.

Кроме того, можно записывать DTS в индексный файл, при условии, что индексные файлы
содержат записи для каждого кадра ("полный" индекс).

Для эффективной выгрузки mp4 из архива необходим полный индекс. Либо можно
формировать заголовок mp4 в хвосте отданного файла, но это отрезает возможность
воспроизведения записанного видео через HTML5 (все варианты со стримингом mp4).

Чем может быть плох полный индекс? - более медленный seek при простой организации
индексных файлов. 100 сообщений в секунду => 360К сообщений в час. Возможно порядка 32 байт
на запись => 12 МБ индекс на один часовой дата-файл. Линейные непрерывные индексы в этом
случае уже не будут работать для простого seek. Варианты организации прокрутки с линейным
индексом - ?

а) самосинхронизирующийся байт-формат индекса, бинарный поиск по индексу. Точнее, слайсинг
индекса - не обязательно бинарный (можно based on estimate). Усечение до одного МБ даст
достаточную скорость поиска => достаточно малого количества предварительных считываний
для поиска. 
б) разделение индексных файлов на набор файлов ограниченного размера.
в) ведение карты индексного файла (аналогично "б", но в рамках одного файла).
   Причём карту индексного файла можно сделать многоуровневой - в виде готового дерева
   поиска - считаю это решение оптимальным.

Карта архива нужна для возобновления записи после остановки. Это механизм восстановления после
внезапного отключения.

Нужно ли сохранять файлы карты архива для всех файлов, содержащихся в данный момент
в архиве? - да, нужно. Карта - это способ навигации по архиву в порядке записи, а не в порядке
раскладки по дате/времени.

Также нужно иметь возможность получать карту архива - анализ наличия записей за определённый
период времени. Это можно делать сканированием содержимого поддиректорий архива канала.

План выглядит чисто. Есть чёткая картина того, как будет выглядеть архив.

